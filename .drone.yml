---
kind: pipeline
name: default
type: kubernetes

environment:
  IMAGE_URL: quay.io/ukhomeofficedigital
  IMAGE_REPO: hof-rds-api
  # Please update semantic versioning whenever there are updates and changes.
  VERSION_TAG: 3.0.0

node_image: &node_image
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/hof-nodejs:20.19.0-alpine3.21@sha256:aad584fa26cb2838739527166c8965d95d0d2d9b88cfd5e3e2d3b8647ae03101

trigger:
  branch:
    - master

steps:
  - name: clone_repos
    image: alpine/git
    environment:
      DRONE_GIT_USERNAME:
        from_secret: drone_git_username
      DRONE_GIT_TOKEN:
        from_secret: drone_git_token
    commands:
      - git clone https://$${DRONE_GIT_USERNAME}:$${DRONE_GIT_TOKEN}@github.com/UKHomeOfficeForms/hof-services-config.git
    when:
      branch:
        include:
        - master
      event: [push, pull_request]

  # Trivy Security Scannner for scanning OS related vulnerabilities in Base image of Dockerfile
  - name: scan_base_image_os
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: quay.io/ukhomeofficedigital/hof-nodejs:20.19.0-alpine3.21@sha256:aad584fa26cb2838739527166c8965d95d0d2d9b88cfd5e3e2d3b8647ae03101
      SERVICE_URL: https://acp-trivy-helm.acp-trivy.svc.cluster.local:443
      SEVERITY: MEDIUM,HIGH,CRITICAL  --dependency-tree
      FAIL_ON_DETECTION: false
      IGNORE_UNFIXED: false
      ALLOW_CVE_LIST_FILE: hof-services-config/infrastructure/trivy/.trivyignore.yaml
    volumes:
      - name: dockersock
        path: /root/.dockersock
    when:
      event: [push, pull_request]

  - name: setup
    <<: *node_image
    commands:
      - yarn install --frozen-lockfile
    when:
      branch: master
      event: [push, pull_request]

  - name: linting
    <<: *node_image
    commands:
      - yarn run test:lint
    when:
      branch: master
      event: [push, pull_request]

  - name: unit-tests
    <<: *node_image
    commands:
      - yarn test:unit
    when:
      branch: master
      event: [push, pull_request]

  - name: integration-tests
    <<: *node_image
    environment:
      NODE_ENV: test
      DB_HOST: postgres-db
      SERVICE_NAME: asc
    commands:
      - sleep 15
      - yarn db:setup
      - yarn test:integration
    when:
      branch: master
      event: [push, pull_request]

  - name: build_image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - docker build --no-cache -t $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} .
    volumes:
      - name: dockersock
        path: /var/run
    when:
      branch: master
      event: [push, pull_request]

  # Trivy Security Scannner for scanning nodejs packages in Yarn
  - name: scan_node_packages
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: $${IMAGE_URL}/$${IMAGE_REPO}:$${DRONE_COMMIT_SHA}
      SEVERITY: MEDIUM,HIGH,CRITICAL  --dependency-tree
      FAIL_ON_DETECTION: false
      IGNORE_UNFIXED: false
      ALLOW_CVE_LIST_FILE: hof-services-config/infrastructure/trivy/.trivyignore.yaml
    commands:
      - trivy image --severity MEDIUM,HIGH,CRITICAL --dependency-tree --scanners vuln --ignorefile ${ALLOW_CVE_LIST_FILE} $${IMAGE_REPO}:$${DRONE_COMMIT_SHA}
      - trivy repo --branch ${DRONE_SOURCE_BRANCH} --severity MEDIUM,HIGH,CRITICAL --dependency-tree --scanners vuln --ignorefile ${ALLOW_CVE_LIST_FILE} https://github.com/UKHomeOffice/hof-rds-api
    volumes:
      - name: dockersock
        path: /var/run 
    when:
      event: [push, pull_request]

  - name: image_to_quay
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    environment:
      DOCKER_PASSWORD:
        from_secret: DOCKER_PASSWORD
    commands:
    - docker login -u="ukhomeofficedigital+hof_rds_api" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} $${IMAGE_URL}/$${IMAGE_REPO}:$${VERSION_TAG}
    - docker push $${IMAGE_URL}/$${IMAGE_REPO}:$${VERSION_TAG}
    when:
      branch: master
      event: [push, pull_request]

  # CRON job steps that runs security scans using Snyk & Anchore
  - name: cron_clone_repos
    image: alpine/git
    environment:
      DRONE_GIT_USERNAME:
        from_secret: drone_git_username
      DRONE_GIT_TOKEN:
        from_secret: drone_git_token
    commands:
      - git clone https://$${DRONE_GIT_USERNAME}:$${DRONE_GIT_TOKEN}@github.com/UKHomeOfficeForms/hof-services-config.git
    when:
      cron: security_scans
      event: cron

  - name: cron_build_image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - docker build --no-cache -t $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} .
    volumes:
      - name: dockersock
        path: /var/run
    when:
      cron: security_scans
      event: cron

  - name: cron_trivy_scan_image_os
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    pull: always
    environment:
        IMAGE_NAME: quay.io/ukhomeofficedigital/hof-nodejs:20.19.0-alpine3.21@sha256:aad584fa26cb2838739527166c8965d95d0d2d9b88cfd5e3e2d3b8647ae03101
        SEVERITY: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL --dependency-tree
        FAIL_ON_DETECTION: true
        IGNORE_UNFIXED: false
        ALLOW_CVE_LIST_FILE: hof-services-config/infrastructure/trivy/.trivyignore.yaml
    when:
      cron: security_scans
      event: cron

  - name: cron_trivy_scan_node_packages
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    pull: always
    environment:
        IMAGE_NAME: $${IMAGE_REPO}:$${DRONE_COMMIT_SHA}
        SEVERITY: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL --dependency-tree
        FAIL_ON_DETECTION: true
        IGNORE_UNFIXED: false
        ALLOW_CVE_LIST_FILE: hof-services-config/infrastructure/trivy/.trivyignore.yaml
    commands:
      - trivy image --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL --dependency-tree --scanners vuln --ignorefile ${ALLOW_CVE_LIST_FILE}  $${IMAGE_REPO}:$${DRONE_COMMIT_SHA}
      - trivy repo --branch ${DRONE_SOURCE_BRANCH} --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL --dependency-tree --scanners vuln --ignorefile ${ALLOW_CVE_LIST_FILE} https://github.com/UKHomeOffice/hof-rds-api 
    volumes:
      - name: dockersock
        path: /var/run
    when:
      cron: security_scans
      event: cron
      status: [success, failure]


  # Slack notification upon a CRON job fail

  - name: cron_notify_slack_security_scans
    pull: if-not-exists
    image: plugins/slack:1.4.1
    settings:
      channel: sas-hof-security
      failure: ignore
      template: >
          *âœ˜ {{ uppercasefirst build.status }}*: Cron job `security_scans` has failed. Prioritise reviewing build logs and addressing issues.

          *Repo* <https://github.com/{{ repo.owner }}/{{ repo.name }}/|{{ repo.owner }}/{{ repo.name }}> | *Branch* <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{build.branch}}> | *Commit* <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>

          *Build <{{build.link}}|#{{build.number}}>*
      webhook:
        from_secret: slack_sas_hof_security_webhook
    when:
      cron: security_scans
      event: cron
      status: [ failure ]

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

  - name: postgres-db
    image: postgres
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

volumes:
  - name: dockersock
    temp: {}

...
